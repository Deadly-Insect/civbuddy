<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    CivBuddy - A Civilization Tactics Guide
    Copyright (c) 2011 Thomas Jensen
    File: $Id$
    Date created: 2011-01-28

    This program is free software: you can redistribute it and/or modify it under the terms of the GNU General
    Public License, version 3, as published by the Free Software Foundation.
    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
    implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
    for more details.
    You should have received a copy of the GNU General Public License along with this program.
    If not, see <http://www.gnu.org/licenses/>.
-->
<project name="CivBuddy" default="build">

    <target name="init">
        <property file="build.properties" />
        <property name="dir.stage" value="${dir.build}/stage" />
        <property file="${versionFile}" />
    </target>
    
    <target name="initWithBuildNum" depends="init">
        <echo message="Incrementing build number" />
        <property name="cmt1" value=" $$Id$$" />
        <property name="cmt2" value="${cmt1}${line.separator}# CivBuddy build number, maintained by ant" />
        <property name="cmt3" value="${cmt2}${line.separator}# Author: Thomas Jensen" />
        <property name="cmt4" value="${cmt3}${line.separator}# Creation Date: 2011-05-22" />
        <property name="cmt"  value="${cmt4}${line.separator}# Last modified:" />
        <propertyfile file="${buildNumFile}" comment="${cmt}">
            <entry key="build.number" default="1" type="int" operation="+" value="1"/>
        </propertyfile>

        <property file="${buildNumFile}" />
        <property name="versionBuilt" value="v${major}.${minor} (build ${build.number})" />
        <echo message="Version: ${versionBuilt}" />
        <tstamp>
            <format property="time2" pattern="yyyy-MM-dd HH:mm:ss" unit="hour" />
        </tstamp>
        <echo message="Timestamp: ${time2}" />
    </target>

    <target name="initWithoutBuildNum" depends="init">
        <property file="${buildNumFile}" />
        <property name="versionBuilt" value="v${major}.${minor} (build ${build.number})" />
        <echo message="Version: ${versionBuilt}" />
        <tstamp>
            <format property="time2" pattern="yyyy-MM-dd HH:mm:ss" unit="hour" />
        </tstamp>
        <echo message="Timestamp: ${time2}" />
    </target>



    <target name="javadoc" depends="initWithoutBuildNum" description="Create current Javadoc">

        <delete dir="javadoc"/>

        <javadoc access="private" author="true" destdir="javadoc"
        	doctitle="CivBuddy Java Code Documentation&lt;/h1>${versionBuilt}, generated on ${time2}&lt;h1>"
            nodeprecated="false" nodeprecatedlist="false" noindex="false"
            nonavbar="false" notree="false" source="1.6" sourcepath="src"
            splitindex="false" use="true" version="true" encoding="UTF-8"
            failonerror="true" windowtitle="CivBuddy">

            <classpath>
                <pathelement path="lib/gwt-user.jar"/>
                <pathelement path="lib/gwt-dev.jar"/>
            </classpath>

            <link href="http://google-web-toolkit.googlecode.com/svn/javadoc/2.4/" />
            <link href="http://docs.oracle.com/javase/6/docs/api/" />
        </javadoc>

    </target>



    <target name="clean" depends="init" description="Clean the build folder">
        <delete dir="${dir.build}" />
        <mkdir dir="${dir.build}" />
    </target>



    <target name="compile.javac" depends="clean,initWithBuildNum">
        <mkdir dir="${dir.build}/bin" />
        <javac srcdir="src" destdir="${dir.build}/bin" debug="true" source="1.6" target="1.6">
            <classpath>
                <pathelement location="lib/gwt-user.jar"/>
                <pathelement location="src"/>
            </classpath>
        </javac>
        <copy todir="${dir.build}/bin">
            <fileset dir="src">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>



    <target name="compile.gwt" depends="compile.javac" description="Run the GWT compiler">

        <mkdir dir="${dir.stage}" />

        <java classname="com.google.gwt.dev.Compiler" fork="true" taskname="gwtc">
            <classpath>
                <pathelement location="lib/gwt-dev.jar"/>
                <pathelement location="lib/gwt-user.jar"/>
                <pathelement location="lib/validation-api-1.0.0.GA.jar"/>
                <pathelement location="lib/validation-api-1.0.0.GA-sources.jar"/>
                <pathelement location="${dir.build}/bin"/>
                <pathelement location="src"/>
            </classpath>
            <jvmarg value="-Xms256M" />
            <jvmarg value="-Xmx1024M" />
            <arg line="-war ${dir.stage}"/>
            <arg line="-style ${gwt.style}"/>
            <arg line="-strict"/>
            <arg line="-logLevel INFO"/>
            <arg line="-deploy ${dir.build}"/>
            <arg value="com.tj.civ.CivBuddy"/>
        </java>
        
        <copy file="war/.htaccess" todir="${dir.stage}/civbuddy" preservelastmodified="true" />
        <copy file="war/.htaccess" todir="${dir.stage}" preservelastmodified="true" />
        <copy todir="${dir.stage}" preservelastmodified="true">
            <fileset dir="war">
                <include name="index.html"/>
                <include name="app.cache.html"/>
                <include name="uuid.cache.js"/>
                <include name="keyframes.css"/>
                <include name="images/**"/>
            </fileset>
        </copy>

    </target>



    <target name="build" depends="compile.gwt,javadoc" description="Build the application">
    </target>



    <!-- defines the filesets for deployment -->
    <target name="deployInit" depends="init">

        <!-- FileSets for deploying only the application -->
        <fileset id="fsDelApp">
            <include name="**"/>
            <exclude name="javadoc/**"/>
        </fileset>
        <fileset id="fsCopyApp" dir="${dir.stage}">
            <include name="**"/>
        </fileset>

        <!-- FileSets for deploying only the Javadoc -->
        <fileset id="fsDelJavadoc">
            <include name="javadoc/**"/>
        </fileset>
        <fileset id="fsCopyJavadoc" dir=".">
            <include name="javadoc/**"/>
        </fileset>
    </target>



    <!-- deploy only the app -->
    <target name="deployApp" depends="deployInit"
        description="Deploy the application, but not the Javadoc (requires prior build)">
        <antcall target="copyFilesByFTP">
            <reference refid="fsDelApp" torefid="fsDel" />
            <reference refid="fsCopyApp" torefid="fsCopy" />
        </antcall>
    </target>

    <!-- deploy only the javadoc -->
    <target name="deployJavadoc" depends="deployInit"
        description="Deploy the Javadoc (must already have been generated)">
        <antcall target="copyFilesByFTP">
            <reference refid="fsDelJavadoc" torefid="fsDel" />
            <reference refid="fsCopyJavadoc" torefid="fsCopy" />
        </antcall>
    </target>

    <!-- deploy everything -->
    <target name="deploy" depends="deployApp, deployJavadoc" description="Deploy everything (requires prior build)" />



    <!-- helper task used by the deploy targets to perform the FTP operations -->
    <target name="copyFilesByFTP">
        <ftp action="delete" server="${ftp.server}" binary="yes" remotedir="${ftp.dir}"
            userid="${ftp.user}" password="${ftp.pwd}" passive="yes" verbose="yes">
            <fileset refid="fsDel" />
        </ftp>
        <ftp action="put" server="${ftp.server}" binary="yes" remotedir="${ftp.dir}"
            userid="${ftp.user}" password="${ftp.pwd}" passive="yes" verbose="yes">
            <fileset refid="fsCopy" />
        </ftp>
    </target>



    <target name="sonar" depends="compile.javac" description="Run Sonar analysis">

        <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
            <classpath path="lib/sonar-ant-task-1.3.jar" />
        </taskdef>

        <property name="sonar.sources" value="../src" />
        <property name="sonar.binaries" value="bin" />
        <property name="sonar.libraries" value="../lib/gwt-dev.jar,../lib/gwt-user.jar,
            ../lib/validation-api-1.0.0.GA.jar,../lib/validation-api-1.0.0.GA-sources.jar" />

        <delete dir="${dir.build}/.sonar" failonerror="false" verbose="true" />
        <sonar:sonar key="com.thomasjensen:civbuddy" version="${versionBuilt}" xmlns:sonar="antlib:org.sonar.ant"
            baseDir="${dir.build}" />

    </target>
</project>
