buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath group: 'de.richsource.gradle.plugins', name: 'gwt-gradle-plugin', version: '0.6';
    }
}
plugins {
    id 'java';
    id 'idea';
    id 'war';
    id 'checkstyle';
    id 'com.bmuschko.cargo' version '2.2.1';
    id 'jetty';
}
apply plugin: 'gwt';

repositories {
    mavenLocal()
    jcenter()
}

import de.richsource.gradle.plugins.gwt.LogLevel;
import de.richsource.gradle.plugins.gwt.Style;


group = 'org.civbuddy';
description = 'Original Civilization Board Game Utility';

ext {
    explodedWarDir = file("$buildDir/exploded");
    cargoVersion = '1.4.5';
}

gwt {
    gwtVersion = '2.7.0';
    modules 'com.tj.civ.CivBuddy';
    compiler {
        strict = true;
    }
    logLevel = LogLevel.INFO;
    superDev {
        launcherDir = project.ext.explodedWarDir;
        noPrecompile = true;
    }
    devWar = project.ext.explodedWarDir;
}
compileGwt {
    minHeapSize = '256m';
    maxHeapSize = '1024m';
    style = Style.OBF;
}

configurations {
    download
}
dependencies {
    providedCompile group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.0';
    providedCompile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0';
    compile group: 'com.google.gwt', name: 'gwt-user', version: '2.7.0';
    gwtSdk group: 'com.google.gwt', name: 'gwt-dev', version: '2.7.0';
    cargo group: 'org.codehaus.cargo', name: 'cargo-core-uberjar', version: project.ext.cargoVersion;
    cargo group: 'org.codehaus.cargo', name: 'cargo-ant', version: project.ext.cargoVersion;
    download group: 'org.eclipse.jetty', name: 'jetty-distribution', version: '9.3.3.v20150827';
}
/*
task explodedWar(type: Copy) {
    setGroup(BasePlugin.BUILD_GROUP);
    setDescription('Create the exploded WAR file in a separate directory');
    into "$buildDir/exploded"
    with war
}
war.dependsOn explodedWar
*/


idea.project {
    languageLevel = '1.6';
    // TODO set file encoding to UTF-8
    // example: http://mrhaki.blogspot.de/2012/09/gradle-goodness-customize-idea-project.html
}
idea.module {
    downloadSources = true;
    downloadJavadoc = true;
    excludeDirs += file('.idea');
    // excludeDirs += file('_site');
    excludeDirs += file('_support');
    scopes.PROVIDED.plus += [configurations.providedCompile];
}


checkstyle {
    toolVersion = '6.8.1';
    configFile file('project/checkstyle.xml');
    configProperties 'projectDir': project.projectDir;
    showViolations = true;
    ignoreFailures = true;
    sourceSets = [project.sourceSets.main];
}
tasks.withType(Checkstyle).each {
    it.setGroup(LifecycleBasePlugin.VERIFICATION_GROUP);
}


cargo {
    containerId = 'jetty9x';
    port = 8080;

    deployable {
        file = tasks.draftWar.archivePath;
        context = 'civbuddy';
    }

    local {
        installer {
            // TODO use MavenLocal to avoid repeated downloads
            installUrl = 'http://repo1.maven.org/maven2/org/eclipse/jetty/jetty-distribution/9.3.3.v20150827/jetty-distribution-9.3.3.v20150827.zip';
            downloadDir = file("$buildDir/download");
            extractDir = file("$buildDir/extract");
        }
    }
}

task jettyDraftWar(type: JettyRunWar) {
    dependsOn draftWar
    dependsOn.remove('war');
    webApp = draftWar.archivePath;
}

afterEvaluate {
    tasks.cargoStartLocal.dependsOn(tasks.draftWar);
    tasks.cargoRunLocal.dependsOn(tasks.draftWar);
}
